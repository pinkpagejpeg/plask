name: GitHub Actions

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  init:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20.x]
    steps:
      - uses: actions/checkout@v2

      - name: Set up Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies for frontend
        working-directory: client
        run: |
          npm install

      - name: Run lint for frontend
        working-directory: client
        run: |
          npm run lint

      - name: Run Steiger for frontend
        working-directory: client
        run: |
          npm run lint:steiger

      - name: Typecheck for frontend
        working-directory: client
        run: |
          npm run typecheck

      - name: RUn tests for frontend
        working-directory: client
        run: |
          npm run test

      - name: Build frontend
        working-directory: client
        run: |
          npm run build

      - name: Install dependencies for backend
        working-directory: server
        run: |
          npm install
      
      - name: Fix permissions
        working-directory: server
        run: |
          chmod +x ./node_modules/.bin/eslint
          chmod +x ./node_modules/.bin/sequelize
          chmod +x ./node_modules/.bin/nodemon
          chmod +x ./node_modules/.bin/pm2
          
      - name: Run lint for backend
        working-directory: server
        run: |
          npm run lint

      - name: Set environment variables
        run: |
          echo "PORT=${{ secrets.PORT }}" >> $GITHUB_ENV
          echo "DB_NAME=${{ secrets.DB_NAME }}" >> $GITHUB_ENV
          echo "DB_USER=${{ secrets.DB_USER }}" >> $GITHUB_ENV
          echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> $GITHUB_ENV
          echo "DB_HOST=${{ secrets.DB_HOST }}" >> $GITHUB_ENV
          echo "DB_PORT=${{ secrets.DB_PORT }}" >> $GITHUB_ENV
          echo "SECRET_KEY=${{ secrets.SECRET_KEY }}" >> $GITHUB_ENV
          echo "SITE_KEY=${{ secrets.SITE_KEY }}" >> $GITHUB_ENV

      - name: Start PostgreSQL container
        run: |
          docker run --name postgres -e POSTGRES_PASSWORD=${{ secrets.DB_PASSWORD }} -e POSTGRES_USER=${{ secrets.DB_USER }} -e POSTGRES_DB=${{ secrets.DB_NAME }} -p 5432:5432 -d postgres:latest
          sleep 10

      - name: Run migrations for backend
        working-directory: server
        run: |
          npm run migrate

      - name: Run seeders for backend
        working-directory: server
        run: |
          npm run seed --debug

      - name: Start backend server
        working-directory: server
        run: |
          npm run start
          sleep 10
          npm run stop
